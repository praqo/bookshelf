(function(exports){const events=function(){let events={};function on(eventName,fn){events[eventName]=events[eventName]||[];events[eventName].push(fn)}function off(eventName,fn){if(events[eventName]){for(let i=0;i<events[eventName].length;i++){if(events[eventName][i]===fn){events[eventName].splice(i,1);break}}}}function emit(eventName,data){if(events[eventName]){events[eventName].forEach(fn=>{fn(data)})}}return{on:on,off:off,emit:emit}}();const userDataFunctions=function(){let userData={bookIdArr:[],booksData:[]};if(!localStorage.hasOwnProperty("bookshelfApp")){updateLocalStorage()}else{userData=JSON.parse(localStorage.getItem("bookshelfApp"))}function updateLocalStorage(){localStorage.setItem("bookshelfApp",JSON.stringify(userData));events.emit("userDataChange",userData)}function addBook(bookInfo){userData={...userData,bookIdArr:[...userData.bookIdArr,bookInfo.id],booksData:[...userData.booksData,bookInfo]};console.log(userData);updateLocalStorage()}function removeBook(bookId){userData={...userData,bookIdArr:userData.bookIdArr.filter(item=>item!==bookId),booksData:userData.booksData.filter(item=>item.id!==bookId)};updateLocalStorage()}events.on("addBook",addBook);events.on("removeBook",removeBook);return{userData:userData}}();const search=function(){if(document.querySelector(".js-book-search")){const bookSearchForm=document.querySelector(".js-book-search");const bookSearchInput=document.querySelector("#bookSearch");const apiUrl="http://openlibrary.org/search.json?q=";async function fetchData(url){try{const response=await fetch(url);const data=await response.json();console.log(data);events.emit("searchDataChange",data)}catch(error){console.error(error)}}function searchBooks(e){e.preventDefault();const searchValue=bookSearchInput.value.replace(/ /g,"+");const data=fetchData(apiUrl+searchValue)}bookSearchForm.addEventListener("submit",searchBooks)}}();const results=function(){if(document.querySelector(".js-search-results")){const searchResultsContainer=document.querySelector(".js-search-results");const userData=userDataFunctions.userData;function updateButton(buttonClicked,isAdding){if(isAdding){buttonClicked.innerText="Remove from bookshelf"}else{buttonClicked.innerText="Add to bookshelf"}}function emitRemoveBook(e){const buttonClicked=e.currentTarget;const parentEl=e.currentTarget.parentNode;updateButton(buttonClicked,false);events.emit("removeBook",parentEl.dataset.bookid)}function emitAddBook(e){const buttonClicked=e.currentTarget;const parentEl=e.currentTarget.parentNode;const bookInfo={id:parentEl.dataset.bookid,title:parentEl.dataset.booktitle,author:parentEl.dataset.bookauthor,cover:parentEl.dataset.bookcover};updateButton(buttonClicked,true);events.emit("addBook",bookInfo)}function populateData(data){let htmlToAppend;data.docs.forEach(item=>{htmlToAppend+=`<div class='single-book' data-bookid="${item.key.slice(7)}" data-booktitle="${item.title}" data-bookauthor="${item.author_name?item.author_name[0]:""}" data-bookcover="${item.cover_edition_key?item.cover_edition_key:"default.jpg"}"><h3 class='book-title'>${item.title}</h3>
        ${userData.bookIdArr.includes(item.key.slice(7))?`<button class="js-addRemovebook remove-button">Remove from bookshelf</button>`:`<button class="js-addRemovebook add-button">Add to bookshelf</button>`}
        </div>`});searchResultsContainer.innerHTML=htmlToAppend;document.querySelectorAll(".book-title").forEach(item=>item.addEventListener("click",emitAddBook));document.querySelectorAll(".js-addRemovebook").forEach(item=>{if(item.classList.contains("add-button")){item.addEventListener("click",emitAddBook)}else{item.addEventListener("click",emitRemoveBook)}})}events.on("searchDataChange",populateData)}}()})(typeof window=="undefined"?window={}:window);